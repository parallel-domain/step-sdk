syntax = "proto3";

package pd.data;

import "options.proto";

message WriteDGPDatasetConfig
{
    string semantic_label_filepath = 1 [(type)=eConfiguration];
    string dgp_output_path = 2 [(stream)=eOutput];
    string input_semantic_map = 3 [(type)=eMeshIDMap, (stream)=eInput];
    string input_semantic_mask = 4 [(type)=eImage, (stream)=eInput];
    string input_bounding_box_2d = 5 [(type)=eAnnotation, (stream)=eInput];
    string input_bounding_box_3d = 6 [(type)=eAnnotation, (stream)=eInput];
    string input_instance_mask = 7 [(type)=eImage, (stream)=eInput];
    string input_instance_state = 8 [(type)=eAnnotation, (stream)=eInput];
    string input_instance_point_2d = 9 [(type)=eAnnotation, (stream)=eInput];
    string input_instance_point_3d = 10 [(type)=eAnnotation, (stream)=eInput];
    string input_instance_map = 11 [(type)=eMeshIDMap, (stream)=eInput];
    string input_motion_vectors_2d = 12 [(type)=eImage, (stream)=eInput];
    string input_world_lines = 13 [(type)=eAnnotation, (stream)=eInput];
    string input_rgb = 14 [(type)=eImage, (stream)=eInput];
    string input_depth = 15 [(type)=eImage, (stream)=eInput];
    string input_point_cloud_positions = 16 [(type)=ePointCloud, (stream)=eInput];
	string input_point_cloud_metadata = 17 [(type)=ePointCloud, (stream)=eInput];
	string input_semantic_segmentation_3d = 18 [(type)=ePointCloud, (stream)=eInput];
	string input_instance_segmentation_3d = 19 [(type)=ePointCloud, (stream)=eInput];
	string input_material_properties_3d = 20 [(type)=ePointCloud, (stream)=eInput];
	string input_surface_normals_3d = 21 [(type)=ePointCloud, (stream)=eInput];
	string input_motion_vectors_3d = 22 [(type)=ePointCloud, (stream)=eInput];
	string input_telemetry = 23 [(type)=eAnnotation, (stream)=eInput];
    WriteDGPDatasetExtraConfig configuration_flags = 24;
};

message WriteDGPDatasetExtraConfig {
    bool output_only_visible_2d_bounds = 1;
    bool output_only_visible_3d_bounds = 2;
    repeated DGPDatasetFilterByKeypointNameAndInstanceOntologyConfig filter_out_keypoints_by_name_and_ontology = 3;
    float distance_cull_2d_keypoints = 4;
    repeated uint32 distance_cullable_2d_keypoint_semantic_ids = 6;
    repeated int32 filtered_ontology_ids = 5;
}

message DGPDatasetFilterByKeypointNameAndInstanceOntologyConfig {
    string keypoint_name = 1;
    int32 instance_ontology = 2;
}