# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class pdReturnScenarioData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAspdReturnScenarioData(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = pdReturnScenarioData()
        x.Init(buf, n + offset)
        return x

    # pdReturnScenarioData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # pdReturnScenarioData
    def LocationName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

    # pdReturnScenarioData
    def EgoId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def pdReturnScenarioDataStart(builder): builder.StartObject(2)
def pdReturnScenarioDataAddLocationName(builder, locationName): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(locationName), 0)
def pdReturnScenarioDataAddEgoId(builder, egoId): builder.PrependInt32Slot(1, egoId, 0)
def pdReturnScenarioDataEnd(builder): return builder.EndObject()
