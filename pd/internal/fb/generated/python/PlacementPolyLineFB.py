# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class PlacementPolyLineFB(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsPlacementPolyLineFB(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PlacementPolyLineFB()
        x.Init(buf, n + offset)
        return x

    # PlacementPolyLineFB
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PlacementPolyLineFB
    def Polyline(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from .PolyLineFB import PolyLineFB
            obj = PolyLineFB()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # PlacementPolyLineFB
    def UserData(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return bytes()

def PlacementPolyLineFBStart(builder): builder.StartObject(2)
def PlacementPolyLineFBAddPolyline(builder, polyline): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(polyline), 0)
def PlacementPolyLineFBAddUserData(builder, userData): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(userData), 0)
def PlacementPolyLineFBEnd(builder): return builder.EndObject()
