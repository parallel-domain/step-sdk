# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class VehicleConnectionFB(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsVehicleConnectionFB(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = VehicleConnectionFB()
        x.Init(buf, n + offset)
        return x

    # VehicleConnectionFB
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # VehicleConnectionFB
    def OtherAgentId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # VehicleConnectionFB
    def JointTransform(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            x = o + self._tab.Pos
            from .float4x4_t import float4x4_t
            obj = float4x4_t()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

def VehicleConnectionFBStart(builder): builder.StartObject(2)
def VehicleConnectionFBAddOtherAgentId(builder, otherAgentId): builder.PrependInt32Slot(0, otherAgentId, 0)
def VehicleConnectionFBAddJointTransform(builder, jointTransform): builder.PrependStructSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(jointTransform), 0)
def VehicleConnectionFBEnd(builder): return builder.EndObject()
