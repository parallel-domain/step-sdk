# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers

class SignedIntersectionModuleConfigFB(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsSignedIntersectionModuleConfigFB(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SignedIntersectionModuleConfigFB()
        x.Init(buf, n + offset)
        return x

    # SignedIntersectionModuleConfigFB
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SignedIntersectionModuleConfigFB
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # SignedIntersectionModuleConfigFB
    def SearchRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

def SignedIntersectionModuleConfigFBStart(builder): builder.StartObject(2)
def SignedIntersectionModuleConfigFBAddId(builder, id): builder.PrependUint64Slot(0, id, 0)
def SignedIntersectionModuleConfigFBAddSearchRadius(builder, searchRadius): builder.PrependFloat32Slot(1, searchRadius, 0.0)
def SignedIntersectionModuleConfigFBEnd(builder): return builder.EndObject()
